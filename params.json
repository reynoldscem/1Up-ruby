{"name":"1up-ruby","tagline":"","body":"Welcome\r\n=======\r\n\r\nHello and welcome to 1-UP's Ruby workshop. Whether you're entirely new to programming, new to the Ruby language or just want to learn something new - we hope that you will get something of benefit.\r\n\r\nYou can see how to install Ruby on you operating system of choice [here](https://www.ruby-lang.org/en/installation/).\r\n\r\nBasic syntax\r\n============\r\n\r\nFirst off let's take a look at some basic methods in Ruby. `puts()` is used to print text to the screen. Try typing this in into a file called `anything.rb` and running it with `ruby anything.rb`.\r\n\r\n```ruby\r\nputs(\"Hello World!\")\r\nputs \"Hello world!\"\r\n```\r\nWe can see that \"Hello World!\" is printed twice, even though the second time the brackets were missing! In Ruby methods which take only one argument don't need brackets - this might seem weird if you're coming from other languages, but similar things happen in many languages it is often just that we don't think about what is happening behind the scenes.\r\n\r\n```ruby\r\n# Print out some arithmetic\r\nputs 1+2\r\nputs 1.+(2)\r\n```\r\n\r\nThese two lines do exactly the same thing. As it turns out the operators we use all the time are just methods like anything else and can be called with that standard `thing1.method(argument)` syntax. The process of making an easier to read form of elements of a programming language is called *sugar*. Ruby is a very sugary language - I'd argue this makes it pretty sweet to write ;)\r\n\r\nLet's try and make this a little more personal by printing out your own name - we can either get this from standard input or from command line arguments.\r\n\r\n```rubyputs \r\nputs \"Hello #{gets.chomp}\"","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}